### All environment variables are REQUIRED, unless specified otherwise.

TOMBOIS_SQLITE_LOCATION="/path/to/everything.db"

# External - public facing API
# Port forward or reverse proxy this port to have the public view accessible.
TOMBOIS_SERVER_PORT_EXTERNAL=3000

# Internal - private API for personal management of the database.
# Do NOT port forward or reverse proxy this API, as it is not password
# protected.
TOMBOIS_SERVER_PORT_INTERNAL=3001

# The string used to identify yourself when making calls to external services.
# It's strongly recommended you set this, as you may otherwise be blocked.
# Something similar to: "my quantified-self data archive <my@email.address>"
EVERYTHING_VERSION_STRING=""

# Most endpoints will use the device provided in the API key, however some
# internal endpoints and functions don't, so they will use the device ID present
# in this variable.
TOMBOIS_DEFAULT_DEVICE_ID=""

# The URL at which the external server is accessible from.
# Be sure to take into account a reverse proxy, if you are using one. Rather
# than an IP address and port, it may likely be available at a specific domain.
# Note: Please DO NOT add a trailing slash
TOMBOIS_SERVER_EXTERNAL_URI="http://localhost:3000"

# Similar to the variable above, this is the URL pointing to the internal server
# and, as previously mentioned, should only be accessible behind a firewall, and
# NOT accessible to the internet.
TOMBOIS_SERVER_INTERNAL_URI="http://localhost:3001"

# This is displayed on every page, and used as metadata too.
TOMBOIS_PERSON_NAME="Your Name"

# Add HTML to the bottom of each page.
# Useful for custom analytics code
TOMBOIS_FOOTER_HTML=""

# Cache common pages like the index page, /music, /games, etc. in memory, in
# order to prevent database load.
# Use "0" to disable caching
TOMBOIS_SERVER_CACHE_DURATION_SECS="900"
TOMBOIS_SERVER_CACHE_INTERVAL_SECS="900"

# Google API polling:
# Set POLL_INTERVAL to "0" to disable polling.
# Requires that the provided API key and client have access to the YouTube API.
# See: https://console.cloud.google.com/apis/credentials
TOMBOIS_GOOGLE_POLL_INTERVAL="5"
TOMBOIS_GOOGLE_CLIENTID=""
TOMBOIS_GOOGLE_CLIENTSECRET=""
TOMBOIS_GOOGLE_TOKENFILE="data/google-tokens.json"
TOMBOIS_GOOGLE_APIKEY=""
# For checking in, you can use the Places API. Set this to "true" to enable.
# CAUTION: the use of this API requires a billing account and you may be charged
# Your API key needs access to the Places API on the Google Cloud Console.
TOMBOIS_GOOGLE_PLACESAPI_ENABLED="false"
# A comma-separated list of categories to be ignored when searching for nearby
# places. You can find a list of categories on the page linked below.
# NOTE - Only use values from Table A:
# https://developers.google.com/maps/documentation/places/web-service/place-types?hl=en#table-a
TOMBOIS_GOOGLE_PLACESAPI_CATEGORIES_IGNORED="bus_stop,bus_station,transit_station,atm"

# Steam API polling for game activity
# Set POLL_INTERVAL to "0" to disable polling
# See: https://developer.valvesoftware.com/wiki/Steam_Web_API#GetRecentlyPlayedGames_(v0001)
# Get an API Key from here: https://steamcommunity.com/dev/apikey
TOMBOIS_STEAM_POLL_INTERVAL="10"
TOMBOIS_STEAM_APIKEY=""
TOMBOIS_STEAM_USERID=""
TOMBOIS_STEAM_DATA_FILE="data/steam-activity.json"
TOMBOIS_STEAM_DEVICE_ID=""

# Used to fetch images for PSN and RetroAchievement games,
# which match the same dimensions as Steam
TOMBOIS_STEAMGRIDDB_APIKEY=""

# PSN API polling for game activity
# Set POLL_INTERVAL to "0" to disable polling
TOMBOIS_PSN_NPSSO=""
TOMBOIS_PSN_POLL_INTERVAL="5"
TOMBOIS_PSN_DATA_FILE="data/psn-activity.json"
TOMBOIS_PSN_DEVICE_ID=""

# RetroAchievements API polling for emulator game activity
# Set POLL_INTERVAL to "0" to disable polling
TOMBOIS_RETROACHIEVEMENTS_USERNAME=""
TOMBOIS_RETROACHIEVEMENTS_APIKEY=""
TOMBOIS_RETROACHIEVEMENTS_POLL_INTERVAL="60"
TOMBOIS_RETROACHIEVEMENTS_DEVICE_ID=""

# Monzo Webhooks
# Used to validate webhook is set up properly
# See: https://docs.monzo.com/#webhooks
# See: https://developers.monzo.com/
# Optional (unless you set up a webhook, in which case it's required).
TOMBOIS_MONZO_ACCOUNT_ID=""

# Subsonic API - for manual album scrobbling
# (useful when listening to physical media)
# Leave blank to disable.
TOMBOIS_SUBSONIC_URL=""
TOMBOIS_SUBSONIC_USERNAME=""
TOMBOIS_SUBSONIC_PASSWORD=""

# Sonarr API - for tracking TV shows
# Your API key can be found at `/settings/general` on your Sonarr instance.
# Leave blank to disable.
TOMBOIS_SONARR_URL=""
TOMBOIS_SONARR_APIKEY=""

# Letterboxd - for tracking films
# Just your username, it uses the Letterboxd RSS to fetch new films
# Leave USERNAME blank, or set POLL_INTERVAL_SECS to "0" to disable.
TOMBOIS_LETTERBOXD_USERNAME=""
TOMBOIS_LETTERBOXD_DATA_FILE="data/letterboxd.json"
TOMBOIS_LETTERBOXD_POLL_INTERVAL_SECS="86400"

# TMDB - for fetching films' backdrop images
# Leave this blank to turn off image fetching
# See: https://www.themoviedb.org/settings/api
TOMBOIS_TMDB_ACCESS_TOKEN=""

# Discord Bot
# Both variables are required, otherwise the bot will not be enabled.
# You can get a token from here: https://discord.com/developers/applications
TOMBOIS_DISCORD_TOKEN=""
TOMBOIS_DISCORD_CHANNELID=""

# Geocoder
# Used for determining the city/state you're currently located in.
# Not at all required for location history, unless you wish to display it on the
# homepage dashboard.
TOMBOIS_GEOCODER_ENABLED="true"
TOMBOIS_GEOCODER_CACHE_PATH="data/geocoder.json"

# Bluesky post syndication
# Makes a copy of any public posts you make on Bluesky
# To turn off, leave USERNAME blank, or set POLL_INTERVAL_MINS to "0"
TOMBOIS_BLUESKY_USERNAME="did:plc:..."
TOMBOIS_BLUESKY_DATA_FILE="data/bluesky.json"
TOMBOIS_BLUESKY_POLL_INTERVAL_MINS="120"
TOMBOIS_BLUESKY_INCLUDE_REPLIES="true"
# This is false by default because if someone deletes something you've reposted,
# it won't get removed from your site automatically.
TOMBOIS_BLUESKY_INCLUDE_REPOSTS="false"

# Swarm API - Used to syndicate check-ins
# If ANY of these values are blank, Swarm check-ins will not work.
# 1. Create a Project and Service API Key on the Foursquare console (link below)
# 2. Then, set your Push URL to https://YOUR-URL/api/swarm/push?apiKey=<API-KEY>
#    (where "<API-KEY>" is an API key from the devices table)
# 3. Grab the Push Secret and place it here
# 4. Start the server and visit https://YOUR-URL/api/swarm/login
# 5. Check-ins should automatically populate once you check-in on Swarm!
# See: https://foursquare.com/developers/home
EVERYTHING_SWARM_CLIENT_ID=""
EVERYTHING_SWARM_CLIENT_SECRET=""
EVERYTHING_SWARM_PUSH_SECRET=""
EVERYTHING_SWARM_DATA_FILE="data/swarm.json"
# Your Foursquare/Swarm user ID - if a received push event does not match your
# ID it will be rejected. This can be found on the Foursquare Settings page.
# See: "User ID" on https://foursquare.com/settings
EVERYTHING_SWARM_USER_ID=""

# Hides all location related data (checkins, current city) from public view for
# this amount of time, for privacy reasons. The higher the better!
# Default: 1 day (in minutes)
EVERYTHING_LOCATION_DELAY_MINS=1440

# Automatically overrides new checkins as "private" if they are within this
# location (where radius is based on coordinate points).
# Leave any of these three blank to disable
EVERYTHING_LOCATION_PRIVATE_OVERRIDE_LAT=78.235713
EVERYTHING_LOCATION_PRIVATE_OVERRIDE_LONG=15.491050
EVERYTHING_LOCATION_PRIVATE_OVERRIDE_RADIUS=0.01

# kawa is a media conversion server, so images and videos saved from social
# media posts can be compressed and self-hosted. https://git.floof.fm/floof/kawa
# The URL below should point to the server hosting kawa, NOT including the
# `/api/convert` path, as this will be added by Everything.
# Leave blank to disable
EVERYTHING_KAWA_SERVER_URL="https://your-kawa-server.com"
# The authorization token created when setting up kawa (in its .env file)
EVERYTHING_KAWA_AUTH_TOKEN="some-long-and-complicated-string"

# Set the system timezone.
# Optional by default, BUT necessary if you're using Docker.
TZ="Europe/London"

# Used in `test/Requests.http` and nothing else.
# Generate an API key for a device and plug it here, if you wish to test the API
# using the endpoints in that file.
TOMBOIS_TEST_APIKEY=""
